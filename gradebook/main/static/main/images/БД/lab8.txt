1.	С помощью неявного соединения таблиц выберите данные из таблицы Школьники и соответствующие им значения из таблицы Классы. Вывести поля: ФИО, Дата поступления, Классный руководитель, Кабинет, Этаж. 
2.	Перепишите предыдущий запрос, используя внутреннее соединение.
3.	Используя внешнее соединение (сначала LEFT, затем RIGHT), выберите всех школьников и соответствующие им классы.
4.	Добавьте новую таблицу Преподаватели с полями Идентификатор, ФИО nvarchar(300), Телефон, Паспортные данные. Заполните ее валидными тестовыми данными (не менее 5 значений).
5.	Используя оператор UNION, объедините имена классных руководителей из таблицы Классы и имена преподавателей из таблицы Преподаватели.
6.	Выведите на экран имена всех преподавателей, которые не являются классными руководителями (по имени).
7.	Выведите на экран имена всех преподавателей, которые являются классными руководителями (или имеют одинаковые имена).

1.	Объявить новую переменную и присвоить ей следующее значение: найти самый высокий этаж. Вывести значение переменной на экран.
2.	Найти этаж любого класса и если он выше 2, то вывести на экран «Только для старшеклассников.», иначе вывести на экран «Для младших классов».
3.	Используя цикл, вставить 30 новых сгенерированных записей в таблицу Классы.
4.	Продемонстрировать работу блока TRY…CATCH двумя примерами. 

1.	Создайте новое представление. Состав возьмите из лабораторной работы №8 задание 2 (JOIN).
2.	Измените представление, добавив в него любой столбец.
3.	Удалите представление.
4.	Создайте обновляемое представление для одной из таблиц. Продемонстрируйте добавление, изменение и удаление данных на созданном представлении.
5.	Создайте любую табличную переменную, исходя из Вашего варианта. Добавьте в нее 5 записей.
6.	Создайте временную таблицу, исходя из Вашего варианта и поместите туда данные из ранее созданных таблиц.
7.	Создайте производную производную таблицу, исходя из Вашего варианта.

1.	Создайте две хранимые процедуры с входными параметрами и командами SELECT, INSERT/UPDATE/DELETE (выбрать как минимум 2), которые необходимы Вам в разрабатываемой информационной системе (курсовой работе). Аргументируйте свой выбор.
2.	Создайте две функции (первая будет возвращать скалярное значение, а вторая - табличное), которые необходимы Вам в разрабатываемой информационной системе (курсовой работе). Аргументируйте свой выбор.

1.	Используя триггеры, реализуйте логирование действий пользователя (добавление, изменение, удаление) на основных таблицах в разрабатываемой Вами информационной системе (курсовой работе). Во время фиксирования изменений укажите информацию о том, какие данные были и какие стали.
2.	Создайте триггер типа INSTEAD OF для любой таблицы, исходя из разрабатываемой Вами информационной системы (курсовой работы).
